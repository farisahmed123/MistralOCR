{
  "name": "Mistral OCR Image/Pdf",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Document OCR",
        "formDescription": "Please upload your document for processing.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Document",
              "fieldType": "file",
              "multipleFiles": false,
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "id": "f7dacf9e-de2f-42c4-a75e-216ad21cf0cb",
      "name": "On form submission",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        -880,
        -180
      ],
      "webhookId": "f9d60b5f-0a09-4654-a840-84a0f745321e",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/files",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "purpose",
              "value": "ocr"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "Document"
            }
          ]
        },
        "options": {
          "lowercaseHeaders": false
        }
      },
      "id": "54b290cf-6850-4262-80ac-1e65c149881a",
      "name": "Upload to Mistral",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -740,
        -180
      ],
      "typeVersion": 4.2,
      "credentials": {
        "httpHeaderAuth": {
          "id": "****************",
          "name": "Mistral OCR"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.mistral.ai/v1/files/{{ $json.id }}/url",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "expiry",
              "value": "24"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer **********************"
            }
          ]
        },
        "options": {}
      },
      "id": "4e1f9c6e-4a65-47c6-8d8e-dd4d955c946e",
      "name": "Get Signed URL",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -600,
        -180
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/ocr",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer ******************"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"mistral-ocr-latest\",\n  \"document\": {\n    \"type\": \"image_url\",\n    \"image_url\": \"{{$json.url}}\"\n  },\n  \"include_image_base64\": true\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "f432203d-6658-4d62-8879-e13289e12d42",
      "name": "Get OCR Results",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -180,
        60
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "jsCode": "// Get the markdown text from the OCR result\nconst markdown = $input.first().json.output;\n\n// Return the extracted text as output\nreturn [{ extracted_text: markdown }];"
      },
      "id": "43669483-a79e-4dd0-a384-91a89ec42ce7",
      "name": "Data cleaning",
      "type": "n8n-nodes-base.code",
      "position": [
        420,
        -200
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c93258ec-e9d0-41cf-ad2f-1e6f2bad5607",
              "name": "data",
              "value": "={{$json[\"extracted_text\"]}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        -200
      ],
      "id": "29ba0dd1-0c62-4953-81e5-4ed9624301a3",
      "name": "Set"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "data",
        "options": {
          "fileName": "ocr_output.txt"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        780,
        -200
      ],
      "id": "ca17a3a0-b963-4fae-a90d-7f49acbe9e6f",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.pages[0].markdown }}",
        "options": {
          "systemMessage": "=xtract only the following from the medical document below:\n- Patient details (name, age, gender, etc.)\n- Medicine name(s) with strength (e.g., Paracetamol 500mg)\n- Dosage(s)\n\nIgnore all other information.\n\nFormat:\nPatient Name: \nAge: \nGender: \nMedicine: \nDosage: \n\nIf there are multiple medicines, list each with its strength and dosage.\n\nMedical Document:\n{{ $json.pages[0].markdown }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        80,
        -200
      ],
      "id": "3eac15cb-68fb-4204-934d-2fb7cd7893c5",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-chat:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        80,
        20
      ],
      "id": "1c9b6639-bb7c-4526-af94-16f4314923cc",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "****************",
          "name": "OpenRouter account 7"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.mistral.ai/v1/ocr",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer *********************"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"mistral-ocr-latest\",\n  \"document\": {\n    \"type\": \"document_url\",\n    \"document_url\": \"{{ $json.url }}\"\n  },\n  \"include_image_base64\": true\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -200,
        -420
      ],
      "id": "926a42ea-3141-4704-bff0-2ab9fb485709",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('On form submission').item.json.Document.mimetype }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "4f3e0780-079c-42fe-865d-4402d1643424"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d36a175e-572f-46a4-85bf-9b3dc28534f7",
                    "leftValue": "={{ $('On form submission').item.json.Document.mimetype }}",
                    "rightValue": "image/jpeg",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -440,
        -180
      ],
      "id": "c33068ce-8318-40ad-922e-a3eda41aac1e",
      "name": "Switch1"
    }
  ],
  "pinData": {},
  "connections": {
    "Data cleaning": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Signed URL": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get OCR Results": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Mistral": {
      "main": [
        [
          {
            "node": "Get Signed URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Upload to Mistral",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Data cleaning",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get OCR Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "247580e0-294c-4e74-bc8b-7cfece7e9705",
  "meta": {
    "instanceId": "91c603d86b6043f08d990651a9d0bcc9a2a7dd418477ee5af5d2440c6125a8d5"
  },
  "id": "GVBdes47Cg1baKLr",
  "tags": []
}
